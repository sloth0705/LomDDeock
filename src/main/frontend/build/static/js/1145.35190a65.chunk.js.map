{"version":3,"file":"static/js/1145.35190a65.chunk.js","mappings":"4JAAIA,E,iCA2BJ,SAASC,EAAaC,GACpB,OAAOC,OAAOD,EAChB,CAEA,IAAIE,EAAa,gDAEjB,SAASC,EAAkBC,EAAWC,EAAaC,GACjD,IACIC,GADcC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,CAAC,GACpDG,IAC/BA,OAA2B,IAArBJ,EAA8BL,EAAaK,EAErD,MAAsB,qBAAXN,OAEFW,QAAQC,QAAQ,CAAC,GAvC5B,SAAoBF,EAAKG,GACvB,IAAIC,EAAkBC,SAASC,cAAc,SAAUC,OAAOP,EAAK,OAEnE,GAAuB,MAAnBI,QAA6CL,IAAlBZ,EAC7B,OAAOA,EAGT,GAAuB,MAAnBiB,QAAuDL,IAA5BX,EAAae,GAC1C,OAAOF,QAAQC,QAAQd,EAAae,IAGtC,IAAIK,EAASH,SAASI,cAAc,UAYpC,OAXAD,EAAOR,IAAMA,EACbb,EAAgB,IAAIc,SAAQ,SAAUC,EAASQ,GAC7CL,SAASM,KAAKC,YAAYJ,GAC1BlB,OAAOuB,iBAAiB,2BAA2BN,OAAOJ,IAAY,gBACpCJ,IAA5BX,EAAae,GACfD,EAAQd,EAAae,IAErBO,EAAO,IAAII,MAAM,8CAA8CP,OAAOP,EAAK,MAE/E,GACF,GAEF,CAmBSe,CAAWf,EAAK,iBAAiBgB,MAAK,SAAUC,GACrD,OAAOA,EAAcxB,EAAWC,EAAaC,EAC/C,GACF,CAUA,ICtCWuB,EAAS,WAAH,IAAIC,EAAItB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAE,OAC5BuB,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACC,EAAIC,GAWvD,OARED,IAFFC,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGV,GAAG,GAAG,E,WCvBFhC,EAAY,uCACZC,EAAcwB,IAEL,SAASU,IACpB,IAAMC,GAAmBC,EAAAA,EAAAA,QAAO,OACAA,EAAAA,EAAAA,QAAO,MAcvC,OAVAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAC+BhD,EAAkBC,EAAWC,GAAa,KAAD,GAA/D0C,EAAaE,EAAAG,MAELC,qBAAqB,kBAN7B,IAQNb,EAAiBc,QAAUP,EAAc,wBAAAE,EAAAM,OAAA,GAAAT,EAAA,IAL7CH,EAOJ,GAAG,KAGCa,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAChBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,wBACJC,EAAAA,EAAAA,KAAA,OAAKxB,GAAG,oBACRwB,EAAAA,EAAAA,KAAA,UACIC,SAAOjB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAgB,IAAA,IAAAd,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,OACyC,GAAxCJ,EAAgBP,EAAiBc,QAAOQ,EAAAZ,KAAA,GAGtCH,EAAc,CAADe,EAAAX,KAAA,eAAAW,EAAAX,KAAA,EACPJ,EAAcgB,eAAe,CAC/BC,QAASnC,IACToC,UAAW,iDACXC,aAAc,qBACdC,cAAe,wBACfC,WAAW,GAADlD,OAAKjB,OAAOoE,SAASC,OAAM,YACrCC,QAAQ,GAADrD,OAAKjB,OAAOoE,SAASC,OAAM,WACnC,KAAD,EAAAR,EAAAX,KAAA,gBAAAW,EAAAZ,KAAA,EAAAY,EAAAU,GAAAV,EAAA,SAGNW,QAAQC,IAAGZ,EAAAU,IAAM,yBAAAV,EAAAP,OAAA,GAAAM,EAAA,kBAEvBH,SACL,+BAKb,C","sources":["../node_modules/@tosspayments/payment-widget-sdk/dist/index.esm.js","../node_modules/nanoid/index.browser.js","pages/payment/Checkout.js"],"sourcesContent":["var cachedPromise;\nfunction loadScript(src, namespace) {\n  var existingElement = document.querySelector(\"[src=\\\"\".concat(src, \"\\\"]\"));\n\n  if (existingElement != null && cachedPromise !== undefined) {\n    return cachedPromise;\n  }\n\n  if (existingElement != null && getNamespace(namespace) !== undefined) {\n    return Promise.resolve(getNamespace(namespace));\n  }\n\n  var script = document.createElement('script');\n  script.src = src;\n  cachedPromise = new Promise(function (resolve, reject) {\n    document.head.appendChild(script);\n    window.addEventListener(\"TossPayments:initialize:\".concat(namespace), function () {\n      if (getNamespace(namespace) !== undefined) {\n        resolve(getNamespace(namespace));\n      } else {\n        reject(new Error(\"[TossPayments SDK] Failed to load script: [\".concat(src, \"]\")));\n      }\n    });\n  });\n  return cachedPromise;\n}\n\nfunction getNamespace(name) {\n  return window[name];\n}\n\nvar SCRIPT_URL = 'https://js.tosspayments.com/v1/payment-widget';\n\nfunction loadPaymentWidget(clientKey, customerKey, options) {\n  var loadOptions = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var _loadOptions$src = loadOptions.src,\n      src = _loadOptions$src === void 0 ? SCRIPT_URL : _loadOptions$src;\n\n  if (typeof window === 'undefined') {\n    // XXX(@HyunSeob): SSR할 때 생성자가 사용되는 경우 에러를 발생시키지 않는대신 정상적인 인스턴스를 반환하지 않는다.\n    return Promise.resolve({});\n  } // regenerator-runtime 의존성을 없애기 위해 `async` 키워드를 사용하지 않는다\n\n\n  return loadScript(src, 'PaymentWidget').then(function (PaymentWidget) {\n    return PaymentWidget(clientKey, customerKey, options);\n  });\n}\n\nfunction clearPaymentWidget() {\n  var _script$parentElement;\n\n  var script = document.querySelector(\"script[src=\\\"\".concat(SCRIPT_URL, \"\\\"]\"));\n  script === null || script === void 0 ? void 0 : (_script$parentElement = script.parentElement) === null || _script$parentElement === void 0 ? void 0 : _script$parentElement.removeChild(script);\n  window.PaymentWidget = undefined;\n}\n\nvar ANONYMOUS = '@@ANONYMOUS';\n\nexport { ANONYMOUS, clearPaymentWidget, loadPaymentWidget };\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { useEffect, useRef } from \"react\";\r\nimport {\r\n    loadPaymentWidget,\r\n    PaymentWidgetInstance,\r\n} from \"@tosspayments/payment-widget-sdk\";\r\n// import { ANONYMOUS } from \"@tosspayments/payment-widget-sdk\"\r\nimport { nanoid } from \"nanoid\";\r\nimport \"../../App.css\";\r\n\r\nconst clientKey = \"test_ck_D5GePWvyJnrK0W0k6q8gLzN97Eoq\";\r\nconst customerKey = nanoid();\r\n\r\nexport default function Checkout() {\r\n    const paymentWidgetRef = useRef(null);\r\n    const paymentMethodsWidgetRef = useRef(null);\r\n    //const paymentWidgetRef = (useRef < PaymentWidgetInstance) | (null > null);\r\n    const price = 10;\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const paymentWidget = await loadPaymentWidget(clientKey, customerKey);\r\n\r\n            paymentWidget.renderPaymentMethods(\"#payment-widget\", price);\r\n\r\n            paymentWidgetRef.current = paymentWidget;\r\n        })();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <h1>주문서</h1>\r\n            <div id=\"payment-widget\" />\r\n            <button\r\n                onClick={async () => {\r\n                    const paymentWidget = paymentWidgetRef.current;\r\n\r\n                    try {\r\n                        if (paymentWidget) {\r\n                            await paymentWidget.requestPayment({\r\n                                orderId: nanoid(),\r\n                                orderName: \"토스 티셔츠 외 2건\",\r\n                                customerName: \"김토스\",\r\n                                customerEmail: \"customer123@gmail.com\",\r\n                                successUrl: `${window.location.origin}/success`,\r\n                                failUrl: `${window.location.origin}/fail`,\r\n                            });\r\n                        }\r\n                    } catch (err) {\r\n                        console.log(err);\r\n                    }\r\n                }}\r\n            >\r\n                결제하기\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n"],"names":["cachedPromise","getNamespace","name","window","SCRIPT_URL","loadPaymentWidget","clientKey","customerKey","options","_loadOptions$src","arguments","length","undefined","src","Promise","resolve","namespace","existingElement","document","querySelector","concat","script","createElement","reject","head","appendChild","addEventListener","Error","loadScript","then","PaymentWidget","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","Checkout","paymentWidgetRef","useRef","useEffect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","paymentWidget","wrap","_context","prev","next","sent","renderPaymentMethods","current","stop","_jsxs","className","children","_jsx","onClick","_callee2","_context2","requestPayment","orderId","orderName","customerName","customerEmail","successUrl","location","origin","failUrl","t0","console","log"],"sourceRoot":""}