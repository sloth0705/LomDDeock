{"version":3,"file":"static/js/4524.e19e6ed6.chunk.js","mappings":"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","sources":["pages/user/ConfirmEmail.js","../node_modules/react-bootstrap/esm/Image.js","../node_modules/react-bootstrap/esm/InputGroupText.js","../node_modules/react-bootstrap/esm/InputGroup.js"],"sourcesContent":["import React from 'react';\r\nimport Image from 'react-bootstrap/Image'; // 이미지를 위한 React Bootstrap 컴포넌트 가져오기\r\nimport '../../css/user/user.css';\r\nimport { Form, Button, Col, Container, Row } from 'react-bootstrap';\r\nimport logo from '../../images/LomDDeock-letterlogo-korean.png';\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nfunction ConfirmEmail (){\r\n    return (\r\n        <>\r\n            <Container className=\"mt-4\">\r\n                <Row>\r\n                    <Col md={{ span: 6, offset: 3 }} id=\"loginCol\">\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <Image src={logo} alt=\"로고\" className=\"logo\"/>\r\n                        </div>\r\n                        <h2>비밀번호 재설정</h2>\r\n                        <p>회원가입한 이메일 주소를 입력해주세요.</p>\r\n                        <div className=\"confirmEmailForm\">\r\n                            <Form.Label>이메일 아이디</Form.Label>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <Form.Control\r\n                                    placeholder=\"이메일 주소를 입력하세요\"\r\n                                    aria-label=\"Recipient's username\"\r\n                                    aria-describedby=\"basic-addon2\"\r\n                                />\r\n                                <InputGroup.Text>@</InputGroup.Text>\r\n                                <Form.Select id=\"basic-addon2\">\r\n                                    <option value=\"naver.com\">naver.com</option>\r\n                                    <option value=\"gmail.com\">gmail.com</option>\r\n                                    <option value=\"daum.net\">daum.net</option>\r\n                                    {/* 다른 이메일 옵션들을 추가할 수 있습니다 */}\r\n                                </Form.Select>\r\n                                <Button variant=\"outline-secondary\" id=\"button-addon2\">\r\n                                    인증번호 전송\r\n                                </Button>\r\n                            </InputGroup>\r\n                            <Form.Label>인증번호</Form.Label>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <Form.Control\r\n                                    placeholder=\"인증번호를 입력하세요.\"\r\n                                    aria-label=\"Recipient's username\"\r\n                                    aria-describedby=\"basic-addon2\"\r\n                                />\r\n                                <Button variant=\"outline-secondary\" id=\"button-addon2\">\r\n                                    인증번호 확인\r\n                                </Button>\r\n                            </InputGroup>\r\n                        </div>\r\n\r\n                        <div className=\"text-center\">\r\n                            <Button variant=\"danger\" type=\"submit\">\r\n                                확인\r\n                            </Button>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\nexport default  ConfirmEmail;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const propTypes = {\n  /**\n   * @default 'img'\n   */\n  bsPrefix: PropTypes.string,\n  /**\n   * Sets image as fluid image.\n   */\n  fluid: PropTypes.bool,\n  /**\n   * Sets image shape as rounded.\n   */\n  rounded: PropTypes.bool,\n  /**\n   * Sets image shape as circle.\n   */\n  roundedCircle: PropTypes.bool,\n  /**\n   * Sets image shape as thumbnail.\n   */\n  thumbnail: PropTypes.bool\n};\nconst Image = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  fluid = false,\n  rounded = false,\n  roundedCircle = false,\n  thumbnail = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'img');\n  return /*#__PURE__*/_jsx(\"img\", {\n    // eslint-disable-line jsx-a11y/alt-text\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid && `${bsPrefix}-fluid`, rounded && `rounded`, roundedCircle && `rounded-circle`, thumbnail && `${bsPrefix}-thumbnail`)\n  });\n});\nImage.displayName = 'Image';\nexport default Image;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nInputGroupText.displayName = 'InputGroupText';\nexport default InputGroupText;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport InputGroupText from './InputGroupText';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n\n  // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});"],"names":["_jsx","_Fragment","children","Container","className","Row","_jsxs","Col","md","span","offset","id","Image","src","logo","alt","Form","Label","InputGroup","Control","placeholder","Text","Select","value","Button","variant","type","_excluded","propTypes","bsPrefix","PropTypes","fluid","rounded","roundedCircle","thumbnail","React","_ref","ref","_ref$fluid","_ref$rounded","_ref$roundedCircle","_ref$thumbnail","props","_objectWithoutProperties","useBootstrapPrefix","_objectSpread","classNames","concat","displayName","InputGroupText","_ref$as","as","Component","size","hasValidation","contextValue","useMemo","InputGroupContext","Provider","Object","assign","Radio","FormCheckInput","Checkbox"],"sourceRoot":""}