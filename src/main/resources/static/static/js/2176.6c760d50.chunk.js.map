{"version":3,"file":"static/js/2176.6c760d50.chunk.js","mappings":"+LAoCA,UA9BA,WACI,OACIA,EAAAA,EAAAA,KAAA,WAASC,GAAG,QAAOC,UACfF,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CAACF,GAAG,cAAaC,UACvBE,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,UAAU,yBAAwBJ,SAAA,EAEnCF,EAAAA,EAAAA,KAACO,EAAAA,EAAc,KACfH,EAAAA,EAAAA,MAACI,EAAAA,EAAG,CAAAN,SAAA,EACAE,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACIE,EAAAA,EAAAA,MAAA,KAAAF,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,mBACPF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,qBAEZF,EAAAA,EAAAA,KAACS,EAAAA,EAAU,QAEfL,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACIE,EAAAA,EAAAA,MAAA,KAAAF,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,mBACPF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,qBAEZF,EAAAA,EAAAA,KAACS,EAAAA,EAAU,QAEfT,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,0BAMhC,C,yIC9Be,SAASO,IACpB,IAAAC,GAA4BC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GACxCI,GADaF,EAAA,GAAWA,EAAA,IACED,EAAAA,EAAAA,UAAS,OAAKI,GAAAF,EAAAA,EAAAA,GAAAC,EAAA,GAA1BE,GAAFD,EAAA,GAAUA,EAAA,IACtBE,GAA8BN,EAAAA,EAAAA,UAAS,gBAAeO,GAAAL,EAAAA,EAAAA,GAAAI,EAAA,GAA/CE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAAsCC,EAAAA,EAAAA,IAAY,CAACC,OAEnD,SAAgBC,GACZ,IAAMC,EAAS,IAAIC,WACbC,EAAOH,EAETG,IACAF,EAAOG,cAAcD,EAAK,IAC1BX,EAASW,EAAK,KAGlBF,EAAOI,OAAS,SAACC,GACbV,EAAWK,EAAOM,QAClBC,SAASC,kBAAkB,YAAY,GAAGC,MAAQ,EACtD,CACJ,IAfOC,EAAYd,EAAZc,aAAcC,EAAaf,EAAbe,cAiBrB,IAAMC,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOZ,GAAC,OAAAU,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACzBhB,EAAEiB,iBAAiB,wBAAAH,EAAAI,OAAA,GAAAN,EAAA,KACtB,gBAFiBO,GAAA,OAAAX,EAAAY,MAAA,KAAAC,UAAA,KAIlB,OACInD,EAAAA,EAAAA,KAAAoD,EAAAA,SAAA,CAAAlD,UACIF,EAAAA,EAAAA,KAAA,QAAMqD,SAAUhB,EAAcpC,GAAG,aAAYC,UACzCF,EAAAA,EAAAA,KAAA,OAAKM,UAAU,cAAaJ,UACxBE,EAAAA,EAAAA,MAAA,OAAAkD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAAKhD,UAAU,YAAe6B,KAAc,IAAAjC,SAAA,EACxCF,EAAAA,EAAAA,KAAA,OAAKuD,IAAKpC,EAASqC,IAAI,qBAAMlD,UAAU,aACvCN,EAAAA,EAAAA,KAAA,SAAAsD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWlB,KAAe,IAAEqB,UAAU,EAAOC,KAAK,uBAM1E,C","sources":["pages/admin/banner/AdminBanner.js","pages/admin/fileUpload/FileUpload.js"],"sourcesContent":["import React from \"react\";\r\nimport '../../../css/admin/admin.css';\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport AdminAsideMenu from \"../AdminAsideMenu\";\r\nimport FileUpload from \"../fileUpload/FileUpload\";\r\n\r\nfunction adminBanner() {\r\n    return (\r\n        <section id=\"admin\">\r\n            <Container id=\"adminBanner\">\r\n                <Row className=\"justify-content-center\">\r\n                    {/* aside menu */}\r\n                    <AdminAsideMenu/>\r\n                    <Col>\r\n                        <div>\r\n                            <p>\r\n                                <label>배너1</label>\r\n                                <button>삭제</button>\r\n                            </p>\r\n                            <FileUpload/>\r\n                        </div>\r\n                        <div>\r\n                            <p>\r\n                                <label>배너2</label>\r\n                                <button>삭제</button>\r\n                            </p>\r\n                            <FileUpload/>\r\n                        </div>\r\n                        <button>완료</button>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default adminBanner;","import React, { useState, useRef } from \"react\"\r\nimport {useDropzone} from 'react-dropzone'\r\nimport '../../../css/admin/admin.css'\r\n\r\nexport default function FileUpload() {\r\n    const [values, setValues] = useState({})\r\n    const [image, setImage] = useState(null)\r\n    const [preview, setPreview] = useState('/default.png')\r\n    const {getRootProps, getInputProps} = useDropzone({onDrop})\r\n\r\n    function onDrop(acceptedFiles) {\r\n        const reader = new FileReader();\r\n        const file = acceptedFiles\r\n\r\n        if (file) {\r\n            reader.readAsDataURL(file[0]);\r\n            setImage(file[0]);\r\n        }\r\n\r\n        reader.onload = (e) => {\r\n            setPreview(reader.result);\r\n            document.getElementsByName(\"imageurl\")[0].value = ''\r\n        };\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit} id=\"FileUpload\">\r\n                <div className=\"img_contain\">\r\n                    <div className=\"img_wrap\" {...getRootProps()}>\r\n                        <img src={preview} alt=\"이미지\" className=\"img_box\" />\r\n                        <input {...getInputProps()} multiple={false} name='imageurl'/>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}"],"names":["_jsx","id","children","Container","_jsxs","Row","className","AdminAsideMenu","Col","FileUpload","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","setImage","_useState5","_useState6","preview","setPreview","_useDropzone","useDropzone","onDrop","acceptedFiles","reader","FileReader","file","readAsDataURL","onload","e","result","document","getElementsByName","value","getRootProps","getInputProps","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","preventDefault","stop","_x","apply","arguments","_Fragment","onSubmit","_objectSpread","src","alt","multiple","name"],"sourceRoot":""}