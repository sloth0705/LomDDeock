{"version":3,"file":"static/js/2169.b877c9ac.chunk.js","mappings":"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","sources":["storage/Cookie.js","pages/user/Login.js"],"sourcesContent":["import { Cookies } from 'react-cookie';\r\n\r\n\r\nconst cookies = new Cookies();\r\n\r\nexport const setRefreshToken = (refreshToken) => {\r\n    const today = new Date();\r\n    const expireDate = today.setDate(today.getDate() + 7);\r\n\r\n    return cookies.set('refresh_token', refreshToken, {\r\n        sameSite: 'strict',\r\n        path: \"/\",\r\n        expires: new Date(expireDate)\r\n    });\r\n};\r\n\r\nexport const getCookieToken = () => {\r\n    return cookies.get('refresh_token');\r\n};\r\n\r\nexport const removeCookieToken = () => {\r\n    return cookies.remove('refresh_token', { sameSite: 'strict', path: \"/\" })\r\n}","import { Link } from \"react-router-dom\";\r\nimport {Navbar, Container, Row, Col, Button, Form, Image} from \"react-bootstrap\";\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router';\r\nimport { useDispatch, useSelector  } from 'react-redux';\r\nimport '../../css/user/user.css';\r\nimport logo from \"../../images/LomDDeock-letterlogo-korean.png\";\r\nimport React from \"react\";\r\nimport KakaoLogin from \"react-kakao-login\";\r\nimport { setRefreshToken } from '../../storage/Cookie';\r\nimport { SET_TOKEN } from '../../store/Auth';\r\nfunction Login() {\r\n    const accessToken2 = useSelector((state) => state.authToken.accessToken);\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const kakaoClientId = '9169f348c8c5bb0b3fc8f2e08db92d78'\r\n    const kakaoOnSuccess = async (data)=>{\r\n        console.log(data)\r\n        const idToken = data.response.access_token  // 엑세스 토큰 백엔드로 전달\r\n        const email = data.profile.kakao_account.email;\r\n        // 해당 메일로 만들어진 계정이 있는지 확인\r\n        const check = await performCheck(email);\r\n        // 계정이 없을경우 새로 생성\r\n        if (check) {\r\n            const signData = signUp(email);\r\n        }\r\n        signIn(email);\r\n    }\r\n    const kakaoOnFailure = (error) => {\r\n        console.log(error);\r\n        alert('로그인에 실패하였습니다. 잠시 후 다시 시도해주세요.')\r\n    };\r\n    const performCheck = async (email) => {\r\n        return axios.get(`http://localhost:8080/login/social/check/KAKAO?email=${email}`)\r\n            .then((res) => {\r\n                return res.data; // 또는 원하는 처리를 반환할 수 있습니다.\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Error during check:\", error);\r\n                // 오류 처리 로직을 추가할 수 있습니다.\r\n                throw error;\r\n            });\r\n    }\r\n    const signUp = async (email) => {\r\n        try {\r\n            const response = await axios.post('/api/social/signup', {\r\n                email: email\r\n            });\r\n            return response.data.accessToken;\r\n            // 여기에서 response를 처리하거나 반환값을 가공할 수 있습니다.\r\n            console.log(response.data);\r\n            // 예시: 서버에서 성공적으로 처리되었을 때의 로직\r\n            if (response.data.success) {\r\n                // 성공적으로 가입된 경우의 추가 로직\r\n                console.log('Sign-up successful!');\r\n            } else {\r\n                // 가입이 실패한 경우의 추가 로직\r\n                console.log('Sign-up failed.');\r\n            }\r\n        } catch (error) {\r\n            // 오류가 발생한 경우의 추가 로직\r\n            console.error('Error during sign-up:', error);\r\n        }\r\n    }\r\n    const signIn = async (email) => {\r\n        try {\r\n            const response = await axios.post('/api/social/signin', {\r\n                email: email\r\n            });\r\n             localStorage.setItem(\"token\", response.data.accessToken);\r\n            setRefreshToken(response.data.refreshToken);\r\n            dispatch(SET_TOKEN(response.data.accessToken));\r\ndebugger;\r\n            return navigate(\"/\");\r\n            // 여기에서 response를 처리하거나 반환값을 가공할 수 있습니다.\r\n            console.log(response.data);\r\n        } catch (error) {\r\n            // 오류가 발생한 경우의 추가 로직\r\n            console.error('Error during sign-in:', error);\r\n        }\r\n    }\r\n    return (\r\n        <Container className=\"mt-4\">\r\n            <Row>\r\n                <Col md={{ span: 5, offset: 3 }} id=\"loginCol\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <Image src={logo} alt=\"로고\" className=\"logo\"/>\r\n                    </div>\r\n                    <h2 class=\"title\">로그인</h2>\r\n\r\n                    <div>\r\n\r\n                    <li id=\"kkLoginBtn\">\r\n                        <KakaoLogin\r\n                              token={kakaoClientId}\r\n                              onSuccess={kakaoOnSuccess}\r\n                              onFail={kakaoOnFailure}\r\n                              className=\"w100p kkLogin\"\r\n                          />\r\n                    </li>\r\n                    <li id=\"nvLoginBtn\">\r\n                        <a href=\"#\">네이버 로그인</a>\r\n                    </li>\r\n                    <li id=\"ggLoginBtn\">\r\n                        <a href=\"#\">구글 로그인</a>\r\n                    </li>\r\n                        <button onClick={() => console.log('AccessToken:', accessToken2)}>asdf</button>\r\n                        <strong>또는</strong>\r\n                    </div>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                            <Form.Label>아이디</Form.Label>\r\n                            <Form.Control type=\"email\" placeholder=\"이메일 주소 입력\" />\r\n                            <Form.Text className=\"text-muted\">\r\n\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                            <Form.Label>비밀번호</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"비밀번호 입력\" />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n                            <Form.Check type=\"checkbox\" label=\"자동로그인\" />\r\n                        </Form.Group>\r\n                        <div className=\"d-grid gap-2\">\r\n                            <Button variant=\"danger\" type=\"submit\">\r\n                                로그인\r\n                            </Button>\r\n                        </div>\r\n                        <span>\r\n                            <Link to=\"/user/confirmEmail\">비밀번호 재설정</Link>\r\n                            <Link to=\"/user/signup\">회원가입</Link>\r\n                        </span>\r\n                    </Form>\r\n\r\n                </Col>\r\n                <Col></Col>\r\n            </Row>\r\n        </Container>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport  default  Login;"],"names":["cookies","Cookies","setRefreshToken","refreshToken","today","Date","expireDate","setDate","getDate","set","sameSite","path","expires","accessToken2","useSelector","state","authToken","accessToken","navigate","useNavigate","dispatch","useDispatch","kakaoOnSuccess","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","email","wrap","_context","prev","next","console","log","response","access_token","profile","kakao_account","performCheck","sent","signUp","signIn","stop","_x","apply","arguments","_ref2","_callee2","_context2","abrupt","axios","get","concat","then","res","catch","error","_x2","_ref3","_callee3","_context3","post","t0","_x3","_ref4","_callee4","_context4","localStorage","setItem","SET_TOKEN","_x4","_jsx","Container","className","children","_jsxs","Row","Col","md","span","offset","id","Image","src","logo","alt","class","KakaoLogin","token","onSuccess","onFail","alert","href","onClick","Form","Group","controlId","Label","Control","type","placeholder","Text","Check","label","Button","variant","Link","to"],"sourceRoot":""}