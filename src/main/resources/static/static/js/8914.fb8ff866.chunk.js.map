{"version":3,"file":"static/js/8914.fb8ff866.chunk.js","mappings":"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","sources":["storage/Cookie.js","store/Auth.js","pages/user/Login.js"],"sourcesContent":["import { Cookies } from 'react-cookie';\r\n\r\n\r\nconst cookies = new Cookies();\r\n\r\nexport const setRefreshToken = (refreshToken) => {\r\n    const today = new Date();\r\n    const expireDate = today.setDate(today.getDate() + 7);\r\n\r\n    return cookies.set('refresh_token', refreshToken, {\r\n        sameSite: 'strict',\r\n        path: \"/\",\r\n        expires: new Date(expireDate)\r\n    });\r\n};\r\n\r\nexport const getCookieToken = () => {\r\n    return cookies.get('refresh_token');\r\n};\r\n\r\nexport const removeCookieToken = () => {\r\n    return cookies.remove('refresh_token', { sameSite: 'strict', path: \"/\" })\r\n}","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const TOKEN_TIME_OUT = 600*1000;\r\n\r\nexport const tokenSlice = createSlice({\r\n    name: 'authToken',\r\n    initialState: {\r\n        authenticated: false,\r\n        accessToken: null,\r\n        expireTime: null\r\n    },\r\n    reducers: {\r\n        SET_TOKEN: (state, action) => {\r\n            state.authenticated = true;\r\n            state.accessToken = action.payload;\r\n            state.expireTime = new Date().getTime() + TOKEN_TIME_OUT;\r\n        },\r\n        DELETE_TOKEN: (state) => {\r\n            state.authenticated = false;\r\n            state.accessToken = null;\r\n            state.expireTime = null\r\n        },\r\n    }\r\n})\r\n\r\nexport const { SET_TOKEN, DELETE_TOKEN } = tokenSlice.actions;\r\n\r\nexport default tokenSlice.reducer;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useNavigate } from 'react-router';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {Navbar, Container, Row, Col, Button, Form, Image} from \"react-bootstrap\";\r\nimport KakaoLogin from \"react-kakao-login\";\r\n/* interceptor에서 헤더에 토큰을 자동으로 장착해주는 axios */\r\nimport axios from '../../interceptor.js';\r\nimport { setRefreshToken } from '../../storage/Cookie';\r\nimport { SET_TOKEN } from '../../store/Auth';\r\nimport '../../css/user/user.css';\r\nimport logo from \"../../images/LomDDeock-letterlogo-korean.png\";\r\n\r\nfunction Login() {\r\n    const dispatch = useDispatch();\r\n    const state = useSelector((state) => state);\r\n    const navigate = useNavigate();\r\n    // 카카오 로그인 clientId\r\n    const kakaoClientId = '9169f348c8c5bb0b3fc8f2e08db92d78'\r\n\r\n    // 카카오 로그인 API 성공 시 호출\r\n    const kakaoOnSuccess = async (data)=>{\r\n        const idToken = data.response.access_token  // 엑세스 토큰 백엔드로 전달\r\n        const email = data.profile.kakao_account.email;\r\n        // 해당 메일로 만들어진 계정이 있는지 확인\r\n        const check = await performCheck(email);\r\n        if (check) {\r\n            // 계정이 없을경우 새로 생성\r\n            signUp(email);\r\n        }\r\n        // 계정 로그인\r\n        signIn(email);\r\n    }\r\n    // 카카오 로그인 API 실패 시 호출\r\n    const kakaoOnFailure = (error) => {\r\n        console.log(error);\r\n        alert('로그인에 실패하였습니다. 잠시 후 다시 시도해주세요.')\r\n    };\r\n    // 카카오 로그인 시 해당 계정이 서버에 등록 된 계정인지 확인\r\n    const performCheck = async (email) => {\r\n        return axios.get('/api/social/check/KAKAO?email=' + email)\r\n            .then((res) => {\r\n                // true or false를 리턴한다\r\n                return res.data;\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Error during check:\", error);\r\n                throw error;\r\n            });\r\n    }\r\n    // 소셜 로그인 시 해당 메일로 등록된 계정이 없을 경우 계정 가입\r\n    const signUp = async (email) => {\r\n        try {\r\n            const response = await axios.post('/api/social/signup', {\r\n                email: email\r\n            });\r\n        } catch (error) {\r\n            // 오류가 발생한 경우의 추가 로직\r\n            console.error('Error during sign-up:', error);\r\n        }\r\n    }\r\n    // 소셜 로그인 토큰 발행\r\n    const signIn = async (email) => {\r\n        try {\r\n            const response = await axios.post('/api/social/signin', {\r\n                email: email\r\n            });\r\n            // localStorage에 token이라는 이름으로 accessToken을 발행\r\n            localStorage.setItem(\"token\", response.data.accessToken);\r\n            setRefreshToken(response.data.refreshToken);\r\n            console.log('accessToken: ' + response.data.accessToken);\r\n\r\n            // 로그인 성공 후 메인 페이지로 이동\r\n            return navigate(\"/\");\r\n        } catch (error) {\r\n            // 오류가 발생한 경우의 추가 로직\r\n            console.error('Error during sign-in:', error);\r\n        }\r\n    }\r\n\r\n    // 각종 함수 테스트용으로 실행(현재 토큰을 넘겨 사용자 정보를 받는 용도로 사용중...)\r\n    const test = async () => {\r\n    console.log(state)\r\n        try {\r\n            const response = await axios.get('/api/info');\r\n        } catch (error) {\r\n            // 오류가 발생한 경우의 추가 로직\r\n            console.error('Error during sign-in:', error);\r\n        }\r\n    }\r\n    return (\r\n        <Container className=\"mt-4\">\r\n            <Row>\r\n                <Col md={{ span: 5, offset: 3 }} id=\"loginCol\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <Image src={logo} alt=\"로고\" className=\"logo\"/>\r\n                    </div>\r\n                    <h2 class=\"title\">로그인</h2>\r\n\r\n                    <div>\r\n\r\n                    <li id=\"kkLoginBtn\">\r\n                        <KakaoLogin\r\n                              token={kakaoClientId}\r\n                              onSuccess={kakaoOnSuccess}\r\n                              onFail={kakaoOnFailure}\r\n                              className=\"w100p kkLogin\"\r\n                          />\r\n                    </li>\r\n                    <li id=\"nvLoginBtn\">\r\n                        <a href=\"#\">네이버 로그인</a>\r\n                    </li>\r\n                    <li id=\"ggLoginBtn\">\r\n                        <a href=\"#\">구글 로그인</a>\r\n                    </li>\r\n                        <strong>또는</strong>\r\n                        <button onClick={() => test()}>test</button>\r\n                    </div>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                            <Form.Label>아이디</Form.Label>\r\n                            <Form.Control type=\"email\" placeholder=\"이메일 주소 입력\" />\r\n                            <Form.Text className=\"text-muted\">\r\n\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                            <Form.Label>비밀번호</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"비밀번호 입력\" />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n                            <Form.Check type=\"checkbox\" label=\"자동로그인\" />\r\n                        </Form.Group>\r\n                        <div className=\"d-grid gap-2\">\r\n                            <Button variant=\"danger\" type=\"submit\">\r\n                                로그인\r\n                            </Button>\r\n                        </div>\r\n                        <span>\r\n                            <Link to=\"/user/confirmEmail\">비밀번호 재설정</Link>\r\n                            <Link to=\"/user/signup\">회원가입</Link>\r\n                        </span>\r\n                    </Form>\r\n\r\n                </Col>\r\n                <Col></Col>\r\n            </Row>\r\n        </Container>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport  default  Login;"],"names":["cookies","Cookies","setRefreshToken","refreshToken","today","Date","expireDate","setDate","getDate","set","sameSite","path","expires","tokenSlice","createSlice","name","initialState","authenticated","accessToken","expireTime","reducers","SET_TOKEN","state","action","payload","getTime","DELETE_TOKEN","_tokenSlice$actions","actions","useDispatch","useSelector","navigate","useNavigate","kakaoOnSuccess","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","email","wrap","_context","prev","next","response","access_token","profile","kakao_account","performCheck","sent","signUp","signIn","stop","_x","apply","arguments","_ref2","_callee2","_context2","abrupt","axios","get","then","res","catch","error","console","_x2","_ref3","_callee3","_context3","post","t0","_x3","_ref4","_callee4","_context4","localStorage","setItem","log","_x4","test","_ref5","_callee5","_context5","_jsx","Container","className","children","_jsxs","Row","Col","md","span","offset","id","Image","src","logo","alt","class","KakaoLogin","token","onSuccess","onFail","alert","href","onClick","Form","Group","controlId","Label","Control","type","placeholder","Text","Check","label","Button","variant","Link","to"],"sourceRoot":""}