{"version":3,"file":"static/js/1711.98a8f7af.chunk.js","mappings":"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","sources":["store/Auth.js","js/member/login.js","pages/user/Login.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const TOKEN_TIME_OUT = 600*1000;\r\n\r\nexport const tokenSlice = createSlice({\r\n    name: 'authToken',\r\n    initialState: {\r\n        authenticated: false,\r\n        accessToken: null,\r\n        expireTime: null\r\n    },\r\n    reducers: {\r\n        SET_TOKEN: (state, action) => {\r\n            state.authenticated = true;\r\n            state.accessToken = action.payload;\r\n            state.expireTime = new Date().getTime() + TOKEN_TIME_OUT;\r\n        },\r\n        DELETE_TOKEN: (state) => {\r\n            state.authenticated = false;\r\n            state.accessToken = null;\r\n            state.expireTime = null\r\n        },\r\n    }\r\n})\r\n\r\nexport const { SET_TOKEN, DELETE_TOKEN } = tokenSlice.actions;\r\n\r\nexport default tokenSlice.reducer;","import axios from 'axios';\r\n\r\nconst loginForm = async (email, password) => {\r\n    if (email === '' || password === '') {\r\n        alert('이메일과 비밀번호를 작성해주세요.');\r\n        return false;\r\n    }\r\n    const data = {\r\n        email: email,\r\n        password: password\r\n    }\r\n    const resp = await axios.post('/api/local/signin', data);\r\n    return resp.data;\r\n}\r\n\r\nexport { loginForm }","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useNavigate } from 'react-router';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {Navbar, Container, Row, Col, Button, Form, Image} from \"react-bootstrap\";\r\nimport KakaoLogin from \"react-kakao-login\";\r\n/* interceptor에서 헤더에 토큰을 자동으로 장착해주는 axios */\r\nimport axios from '../../interceptor.js';\r\nimport getUserInfo from '../../getUserInfo';\r\nimport { setRefreshToken } from '../../storage/Cookie';\r\nimport { SET_TOKEN } from '../../store/Auth';\r\nimport { loginForm } from '../../js/member/login.js';\r\nimport '../../css/user/user.css';\r\nimport logo from \"../../images/LomDDeock-letterlogo-korean.png\";\r\n\r\nfunction Login() {\r\n    const [loginEmail, setLoginEmail] = useState('');\r\n    const [loginPassword, setLoginPassword] = useState('');\r\n    const dispatch = useDispatch();\r\n    const state = useSelector((state) => state);\r\n    const navigate = useNavigate();\r\n    // 카카오 로그인 clientId\r\n    const kakaoClientId = '9169f348c8c5bb0b3fc8f2e08db92d78'\r\n\r\n    // 카카오 로그인 API 성공 시 호출\r\n    const kakaoOnSuccess = async (data)=>{\r\n        localStorage.setItem(\"kakao_token\", data.response.access_token);\r\n        const idToken = data.response.access_token  // 엑세스 토큰 백엔드로 전달\r\n        const email = data.profile.kakao_account.email;\r\n        // 해당 메일로 만들어진 계정이 있는지 확인\r\n        const check = await performCheck(email);\r\n        if (check) {\r\n            // 계정이 없을경우 새로 생성\r\n            signUp(email);\r\n        }\r\n        // 계정 로그인\r\n        signIn(email);\r\n    }\r\n    // 카카오 로그인 API 실패 시 호출\r\n    const kakaoOnFailure = (error) => {\r\n        console.log(error);\r\n        alert('로그인에 실패하였습니다. 잠시 후 다시 시도해주세요.')\r\n    };\r\n    // 카카오 로그인 시 해당 계정이 서버에 등록 된 계정인지 확인\r\n    const performCheck = async (email) => {\r\n        return axios.get('/api/social/check/KAKAO?email=' + email)\r\n            .then((res) => {\r\n                // true or false를 리턴한다\r\n                return res.data;\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Error during check:\", error);\r\n                throw error;\r\n            });\r\n    }\r\n    // 소셜 로그인 시 해당 메일로 등록된 계정이 없을 경우 계정 가입\r\n    const signUp = async (email) => {\r\n        try {\r\n            const response = await axios.post('/api/social/signup', {\r\n                email: email\r\n            });\r\n        } catch (error) {\r\n            // 오류가 발생한 경우의 추가 로직\r\n            console.error('Error during sign-up:', error);\r\n        }\r\n    }\r\n    // 소셜 로그인 토큰 발행\r\n    const signIn = async (email) => {\r\n        try {\r\n            const response = await axios.post('/api/social/signin', {\r\n                email: email\r\n            });\r\n            localStorage.setItem(\"email\", email);\r\n            // localStorage에 token이라는 이름으로 accessToken을 발행\r\n            localStorage.setItem(\"token\", response.data.accessToken);\r\n            setRefreshToken(response.data.refreshToken);\r\n            console.log('accessToken: ' + response.data.accessToken);\r\n            // 로그인 성공 후 메인 페이지로 이동\r\n            navigate(\"/\");\r\n        } catch (error) {\r\n            // 오류가 발생한 경우의 추가 로직\r\n            console.error('Error during sign-in:', error);\r\n        }\r\n    }\r\n    const localSignIn = async () => {\r\n        const token = await loginForm(loginEmail, loginPassword);\r\n        if (token === '') {\r\n            alert('이메일 혹은 비밀번호가 틀립니다.')\r\n            return false;\r\n        }\r\n        localStorage.setItem(\"email\", loginEmail);\r\n        // localStorage에 token이라는 이름으로 accessToken을 발행\r\n        localStorage.setItem(\"token\", token.accessToken);\r\n        setRefreshToken(token.refreshToken);\r\n        navigate(\"/\");\r\n    }\r\n    return (\r\n        <Container className=\"mt-4\">\r\n            <Row>\r\n                <Col md={{ span: 5, offset: 3 }} id=\"loginCol\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <Image src={logo} alt=\"로고\" className=\"logo\"/>\r\n                    </div>\r\n                    <h2 class=\"title\">로그인</h2>\r\n\r\n                    <div>\r\n\r\n                    <li id=\"kkLoginBtn\">\r\n                        <KakaoLogin\r\n                              token={kakaoClientId}\r\n                              onSuccess={kakaoOnSuccess}\r\n                              onFail={kakaoOnFailure}\r\n                              className=\"w100p kkLogin\"\r\n                          />\r\n                    </li>\r\n                    <li id=\"nvLoginBtn\">\r\n                        <a href=\"#\">네이버 로그인</a>\r\n                    </li>\r\n                    <li id=\"ggLoginBtn\">\r\n                        <a href=\"#\">구글 로그인</a>\r\n                    </li>\r\n                        <strong>또는</strong>\r\n                    </div>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\" onChange={(event) => setLoginEmail(event.target.value)}>\r\n                            <Form.Label>아이디</Form.Label>\r\n                            <Form.Control type=\"email\" placeholder=\"이메일 주소 입력\" />\r\n                            <Form.Text className=\"text-muted\" >\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\" onChange={(event) => setLoginPassword(event.target.value)}>\r\n                            <Form.Label>비밀번호</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"비밀번호 입력\" />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n                            <Form.Check type=\"checkbox\" label=\"자동로그인\" />\r\n                        </Form.Group>\r\n                        <div className=\"d-grid gap-2\">\r\n                            <Button variant=\"danger\" type=\"button\" onClick={() => {localSignIn()}}>\r\n                                로그인\r\n                            </Button>\r\n                        </div>\r\n                        <span>\r\n                            <Link to=\"/user/confirmEmail\">비밀번호 재설정</Link>\r\n                            <Link to=\"/user/signup\">회원가입</Link>\r\n                        </span>\r\n                    </Form>\r\n\r\n                </Col>\r\n                <Col></Col>\r\n            </Row>\r\n        </Container>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport  default  Login;"],"names":["tokenSlice","createSlice","name","initialState","authenticated","accessToken","expireTime","reducers","SET_TOKEN","state","action","payload","Date","getTime","DELETE_TOKEN","_tokenSlice$actions","actions","loginForm","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","email","password","data","resp","wrap","_context","prev","next","alert","abrupt","axios","post","sent","stop","_x","_x2","apply","arguments","_useState","useState","_useState2","_slicedToArray","loginEmail","setLoginEmail","_useState3","_useState4","loginPassword","setLoginPassword","navigate","useDispatch","useSelector","useNavigate","kakaoOnSuccess","localStorage","setItem","response","access_token","profile","kakao_account","performCheck","signUp","signIn","_ref2","_callee2","_context2","get","then","res","catch","error","console","_ref3","_callee3","_context3","t0","_x3","_ref4","_callee4","_context4","setRefreshToken","refreshToken","log","_x4","localSignIn","_ref5","_callee5","token","_context5","_jsx","Container","className","children","_jsxs","Row","Col","md","span","offset","id","Image","src","logo","alt","class","KakaoLogin","onSuccess","onFail","href","Form","Group","controlId","onChange","event","target","value","Label","Control","type","placeholder","Text","Check","label","Button","variant","onClick","Link","to"],"sourceRoot":""}